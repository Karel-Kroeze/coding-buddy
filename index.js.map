{"mappings":"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","sources":["./renderers/visOptions.ts","./renderers/feedback.ts"],"sourcesContent":["export const visOptions = { \r\n    physics: false, \r\n    height: \"100%\", \r\n    width: \"100%\",\r\n    nodes: {\r\n        chosen: false,\r\n        shape: 'box',\r\n        labelHighlightBold: false,\r\n        shapeProperties: {\r\n            borderRadius: 0\r\n        },\r\n        borderWidth: 1,\r\n        borderWidthSelected: 1,\r\n        color: {\r\n            border: '#6495ED',\r\n            background: '#4444AD',\r\n            highlight: '#6495ED',\r\n            hover: '#6495ED'\r\n        },\r\n        font: {\r\n            color: 'white',\r\n            size: 15,\r\n            face: '\"Helvetica Neue\", Helvetica, Arial, sans-serif'\r\n        },\r\n        widthConstraint: {\r\n            minimum: 25,\r\n            maximum: 150\r\n        }\r\n    },\r\n    edges: {\r\n        labelHighlightBold: false,\r\n        arrows: \"to\",\r\n        width: 1,\r\n        color: {\r\n            color: 'black',\r\n            highlight: 'black',\r\n            hover: 'black'\r\n        },\r\n        font: {\r\n            color: 'black',\r\n            size: 15,\r\n            face: '\"Helvetica Neue\", Helvetica, Arial, sans-serif',\r\n            strokeWidth: 8,\r\n            strokeColor: 'white',\r\n            background: 'white'\r\n        },\r\n        selectionWidth: 0,\r\n        smooth: false,\r\n        length: 150\r\n    } \r\n};\r\nexport default visOptions;","import {\r\n    Network,\r\n    DataSet,\r\n    IdType,\r\n    Node,\r\n    Edge,\r\n    NodeOptions,\r\n    EdgeOptions,\r\n    Position,\r\n} from \"vis\";\r\nimport { visOptions } from \"./visOptions\";\r\ndeclare const artifact: any;\r\nconst shadow = {\r\n    enabled: true,\r\n    color: \"rgb(99, 234, 255)\",\r\n    size: 5,\r\n    x: 0,\r\n    y: 0,\r\n};\r\nconst highlightNode: NodeOptions = {\r\n    shadow,\r\n    color: {\r\n        border: \"rgb(99, 234, 255)\",\r\n    },\r\n    borderWidth: 2,\r\n};\r\nconst highlightEdge: EdgeOptions = {\r\n    shadow,\r\n    color: {\r\n        color: \"rgb(99, 234, 255)\",\r\n        highlight: \"rgb(99, 234, 255)\",\r\n    },\r\n    width: 2,\r\n};\r\n\r\nasync function createNetwork(\r\n    map: any,\r\n    target: HTMLElement\r\n): Promise<{ network: Network; nodes: DataSet<Node>; edges: DataSet<Edge> }> {\r\n    let nodes = await new DataSet<Node>(map.nodes);\r\n    let edges = await new DataSet<Edge>(map.edges);\r\n    return {\r\n        nodes,\r\n        edges,\r\n        network: await new Network(target, { nodes, edges }, visOptions),\r\n    };\r\n}\r\n\r\nfunction createFeedback(hint: any, parent: HTMLElement, network: Network) {\r\n    let feedback = document\r\n        .createRange()\r\n        .createContextualFragment(feedbackTemplate);\r\n    parent.appendChild(feedback);\r\n\r\n    let hintTarget: HTMLElement = parent.querySelector(\"#hint-target\");\r\n\r\n    SetFeedbackContent(hintTarget, hint);\r\n\r\n    // update position after (re)drawing (read; dragging).\r\n    network.on(\"afterDrawing\", () => {\r\n        SetFeedbackPosition(\r\n            hint,\r\n            hintTarget,\r\n            parent,\r\n            GetFeedbackPosition(hint, network, parent, hintTarget),\r\n            GetOffset(hint),\r\n            true\r\n        );\r\n    });\r\n\r\n    // cheat, and let the position update every .5s\r\n    setInterval(\r\n        () =>\r\n            SetFeedbackPosition(\r\n                hint,\r\n                hintTarget,\r\n                parent,\r\n                GetFeedbackPosition(hint, network, parent, hintTarget),\r\n                GetOffset(hint),\r\n                true\r\n            ),\r\n        500\r\n    );\r\n\r\n    // init (doesn't always work, hence the cheat)\r\n    SetFeedbackPosition(\r\n        hint,\r\n        hintTarget,\r\n        parent,\r\n        GetFeedbackPosition(hint, network, parent, hintTarget),\r\n        GetOffset(hint),\r\n        true\r\n    );\r\n    console.log({\r\n        hint,\r\n        pos: GetFeedbackPosition(hint, network, parent, hintTarget),\r\n        offset: GetOffset(hint),\r\n    });\r\n\r\n    GetNodes(hint, network).forEach((nodeId: IdType) => {\r\n        let node = network.body.nodes[nodeId];\r\n        node.setOptions(highlightNode);\r\n    });\r\n    let edge = GetEdge(hint, network);\r\n    if (edge) edge.setOptions(highlightEdge);\r\n\r\n    // add fader\r\n    document.addEventListener(\"keydown\", (event) => {\r\n        if (event.key == \"Shift\") {\r\n            hintTarget.style.opacity = \"0.2\";\r\n        }\r\n    });\r\n    document.addEventListener(\"keyup\", (event) => {\r\n        if (event.key == \"Shift\") {\r\n            hintTarget.style.opacity = \"1.0\";\r\n        }\r\n    });\r\n}\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", async () => {\r\n    let target = document.getElementById(\"artifact\");\r\n    console.log(\"Feedback.ts version 1.1\");\r\n\r\n    if (target) {\r\n        let beforeContainer = document.createElement(\"div\");\r\n        beforeContainer.classList.add(\"before\");\r\n        target.append(beforeContainer);\r\n        let before = await createNetwork(\r\n            artifact.content.before.content,\r\n            beforeContainer\r\n        );\r\n        await createFeedback(\r\n            artifact.content.hint,\r\n            beforeContainer,\r\n            before.network\r\n        );\r\n\r\n        if (artifact.content.after) {\r\n            let afterContainer = document.createElement(\"div\");\r\n            afterContainer.classList.add(\"after\", \"hidden\");\r\n\r\n            let selector = document\r\n                .createRange()\r\n                .createContextualFragment(selectorTemplate);\r\n            let buttonAfter = selector.querySelector(\r\n                \"#buttonAfter\"\r\n            ) as HTMLButtonElement;\r\n            let buttonBefore = selector.querySelector(\r\n                \"#buttonBefore\"\r\n            ) as HTMLButtonElement;\r\n            target.append(afterContainer, selector);\r\n\r\n            let after = await createNetwork(\r\n                artifact.content.after.content,\r\n                afterContainer\r\n            );\r\n\r\n            const toggleAfter = () => {\r\n                beforeContainer.classList.add(\"hidden\");\r\n                afterContainer.classList.remove(\"hidden\");\r\n                buttonBefore.disabled = false;\r\n                buttonAfter.disabled = true;\r\n                after.network.fit();\r\n                console.log(\"switch:after\");\r\n            };\r\n            buttonAfter.onclick = toggleAfter;\r\n\r\n            const toggleBefore = () => {\r\n                beforeContainer.classList.remove(\"hidden\");\r\n                afterContainer.classList.add(\"hidden\");\r\n                buttonBefore.disabled = true;\r\n                buttonAfter.disabled = false;\r\n                before.network.fit();\r\n                console.log(\"switch:before\");\r\n            };\r\n            buttonBefore.onclick = toggleBefore;\r\n\r\n            document.addEventListener(\"keydown\", (event) => {\r\n                console.log(`Keydown: \"${event.key}\"`);\r\n                if (event.key == \"ArrowLeft\" || event.key == \"b\") {\r\n                    event.preventDefault();\r\n                    toggleBefore();\r\n                }\r\n                if (event.key == \"ArrowRight\" || event.key == \"a\") {\r\n                    event.preventDefault();\r\n                    toggleAfter();\r\n                }\r\n\r\n                if (event.key == \"Control\") {\r\n                    toggleAfter();\r\n                }\r\n            });\r\n            document.addEventListener(\"keyup\", (event) => {\r\n                if (event.key == \"Control\") {\r\n                    toggleBefore();\r\n                }\r\n            });\r\n        }\r\n    } else throw new Error(\"artifact element not found\");\r\n});\r\n\r\nfunction GetRelativePosition(element: Element, parent: Element) {\r\n    let parentRect = parent.getBoundingClientRect();\r\n    let elementRect = element.getBoundingClientRect();\r\n    return {\r\n        x: elementRect.left - parentRect.left,\r\n        y: elementRect.top - parentRect.top,\r\n    };\r\n}\r\n\r\nfunction GetSize(element: Element) {\r\n    let elementRect = element.getBoundingClientRect();\r\n    return {\r\n        x: elementRect.width,\r\n        y: elementRect.height,\r\n    };\r\n}\r\n\r\nconst AVATAR = {\r\n    target: {\r\n        src: \"/assets/img/avatars/FemaleCTarget.png\",\r\n        offset: { x: -115, y: -65 },\r\n    },\r\n    explain: {\r\n        src: \"/assets/img/avatars/FemaleCExplain.png\",\r\n        offset: { x: 0, y: 0 },\r\n    },\r\n    good: {\r\n        src: \"/assets/img/avatars/FemaleCGood.png\",\r\n        offset: { x: 0, y: 0 },\r\n    },\r\n};\r\n\r\nfunction GetEdge(hint: any, network: Network): Edge {\r\n    if (hint.element_type === \"edge\")\r\n        return network.body.edges[hint.element_id];\r\n}\r\n\r\nfunction GetNodes(hint: any, network: Network): IdType[] {\r\n    if (hint.element_type === \"node\") {\r\n        return [hint.element_id];\r\n    }\r\n    if (hint.element_type === \"edge\") {\r\n        return network.getConnectedNodes(hint.element_id) as IdType[];\r\n    }\r\n    if (hint.element_type == \"missing_edge\") {\r\n        return [hint.source, hint.target];\r\n    }\r\n    return [];\r\n}\r\n\r\nfunction GetFeedbackPosition(\r\n    hint: any,\r\n    network: Network,\r\n    networkElement: HTMLElement,\r\n    feedbackElement: HTMLElement\r\n): { x: number; y: number } {\r\n    let nodes = GetNodes(hint, network);\r\n    if (nodes.length > 0) {\r\n        let positions = network.getPositions(nodes);\r\n        let position = { x: 0, y: 0 };\r\n        let nodeCount = 0;\r\n        for (let node in positions) {\r\n            position.x += positions[node].x;\r\n            position.y += positions[node].y;\r\n            nodeCount++;\r\n        }\r\n        position.x /= nodeCount;\r\n        position.y /= nodeCount;\r\n        return network.canvasToDOM(position);\r\n    } else {\r\n        let nwPos = networkElement.getBoundingClientRect();\r\n        let fbPos = feedbackElement.getBoundingClientRect();\r\n        console.log({ nwPos, fbPos });\r\n        return {\r\n            x: nwPos.right - fbPos.width,\r\n            y: nwPos.bottom - fbPos.height,\r\n        };\r\n    }\r\n}\r\n\r\nconst MARGIN = 5;\r\nfunction SetFeedbackPosition(\r\n    hint,\r\n    element: HTMLElement,\r\n    parent: HTMLElement,\r\n    position: Position,\r\n    offset: Position,\r\n    inbounds = true\r\n) {\r\n    // relative position of vis canvas vs. window\r\n    switch (hint.element_type) {\r\n        case \"edge\":\r\n        case \"node\":\r\n        case \"missing_edge\":\r\n            let message = GetSize(element.querySelector(\".hint-message\"));\r\n            let relative = GetRelativePosition(parent, document.body);\r\n            let scroll = window.pageYOffset;\r\n\r\n            let target = {\r\n                x: position.x + offset.x + relative.x,\r\n                y: position.y + offset.y + relative.y - message.y - scroll,\r\n            };\r\n            element.style.left = target.x + \"px\";\r\n            element.style.top = target.y + \"px\";\r\n            break;\r\n        default:\r\n            // let dot = ( document.querySelector( \"#dot\" ) as HTMLElement);\r\n            // dot.style.left = position + \"px\";\r\n            // dot.style.top = position + \"px\";\r\n            // dot.style.zIndex = \"500\";\r\n            element.style.left = position.x + \"px\";\r\n            element.style.top = position.y + \"px\";\r\n            break;\r\n    }\r\n}\r\n\r\nfunction SetFeedbackContent(target: HTMLElement, hint: any) {\r\n    // update message\r\n    target.querySelector(\".hint-message-text\").innerHTML = hint.message;\r\n    target.querySelector(\"#hint-id\").innerHTML = hint.id;\r\n\r\n    // update image\r\n    let _avatar: any;\r\n    switch (hint.element_type) {\r\n        case \"edge\":\r\n        case \"node\":\r\n        case \"missing_edge\":\r\n            _avatar = AVATAR.target;\r\n            break;\r\n        default:\r\n            _avatar = AVATAR.explain;\r\n            break;\r\n    }\r\n    (<HTMLImageElement>target.querySelector(\".hint-image\")).src = _avatar.src;\r\n\r\n    updateHintButtons(target, hint);\r\n}\r\n\r\nfunction updateHintButtons(target: HTMLElement, hint: any) {\r\n    // remove current buttons\r\n    const responsesElement = target.querySelector(\"#hint-buttons\");\r\n    responsesElement.innerHTML = \"\";\r\n\r\n    // add new set of buttons\r\n    for (const response of hint.responses) {\r\n        responsesElement.append(\r\n            createResponseActionButton(\r\n                response,\r\n                hint.response.message == response.message\r\n            )\r\n        );\r\n    }\r\n}\r\n\r\nfunction createResponseActionButton(response: any, chosen: boolean) {\r\n    if (!response) {\r\n        return;\r\n    }\r\n\r\n    const button = document.createElement(\"template\");\r\n    button.innerHTML = `<a href=\"#\" class=\"btn btn-success btn-block\">${response.message}</a>`;\r\n\r\n    return button;\r\n}\r\n\r\nfunction GetOffset(hint: any) {\r\n    switch (hint.element_type) {\r\n        case \"edge\":\r\n        case \"node\":\r\n        case \"missing_edge\":\r\n            return AVATAR.target.offset;\r\n        default:\r\n            return AVATAR.explain.offset;\r\n    }\r\n}\r\n\r\nlet feedbackTemplate = `<link rel=\"stylesheet\" href=\"/assets/style/feedback.css\">\r\n    <!-- <div id=\"dot\" style=\"position: absolute; background: red; width: 10px; height: 10px; border-radius: 5px\"></div> -->\r\n    <div id=\"hint-target\" class=\"overlay\">\r\n        <div class=\"hint-message\">\r\n            <div id=\"dismiss-button\"></div>\r\n            <div class=\"hint-message-text\">This is a hint. Do you think it's any good?</div>\r\n            <span id=\"hint-id\" class=\"hint-id tag\"></span>\r\n            <div id=\"hint-buttons\"></div>\r\n        </div>\r\n        <img class=\"hint-image\" src=\"\"/>\r\n    </div>`;\r\n\r\nlet selectorTemplate = `<div class=\"selector columns is-centered\">\r\n    <div class=\"column is-narrow\">\r\n        <button class=\"button is-info\" id=\"buttonBefore\" disabled>Before</button>\r\n        <button class=\"button is-info\" id=\"buttonAfter\">After</button>\r\n    </div></div>`;\r\n"],"names":["$ead4925a44fb82e19611dc44cdfa756d$export$visOptions","physics","height","width","nodes","chosen","shape","labelHighlightBold","shapeProperties","borderRadius","borderWidth","borderWidthSelected","color","border","background","highlight","hover","font","size","face","widthConstraint","minimum","maximum","edges","arrows","strokeWidth","strokeColor","selectionWidth","smooth","length","$992d81f953a795f6cd9dc13cc953d91f$var$shadow","enabled","x","y","$992d81f953a795f6cd9dc13cc953d91f$var$highlightNode","shadow","$992d81f953a795f6cd9dc13cc953d91f$var$highlightEdge","_callee2","map","target","DataSet","Network","network","$992d81f953a795f6cd9dc13cc953d91f$var$createFeedback","hint","parent","feedback","document","createRange","createContextualFragment","$992d81f953a795f6cd9dc13cc953d91f$var$feedbackTemplate","appendChild","hintTarget","querySelector","_avatar","innerHTML","message","id","element_type","$992d81f953a795f6cd9dc13cc953d91f$var$AVATAR","src","responsesElement","responses","response","append","$992d81f953a795f6cd9dc13cc953d91f$var$createResponseActionButton","$992d81f953a795f6cd9dc13cc953d91f$var$updateHintButtons","$992d81f953a795f6cd9dc13cc953d91f$var$SetFeedbackContent","on","$992d81f953a795f6cd9dc13cc953d91f$var$SetFeedbackPosition","$992d81f953a795f6cd9dc13cc953d91f$var$GetFeedbackPosition","$992d81f953a795f6cd9dc13cc953d91f$var$GetOffset","setInterval","console","log","pos","offset","$992d81f953a795f6cd9dc13cc953d91f$var$GetNodes","forEach","nodeId","body","setOptions","edge","element_id","$992d81f953a795f6cd9dc13cc953d91f$var$GetEdge","addEventListener","event","key","style","opacity","$992d81f953a795f6cd9dc13cc953d91f$var$GetRelativePosition","element","parentRect","getBoundingClientRect","elementRect","left","top","$992d81f953a795f6cd9dc13cc953d91f$var$GetSize","$992d81f953a795f6cd9dc13cc953d91f$var$_asyncToGenerator","regeneratorRuntime","mark","_callee","getElementById","beforeContainer","createElement","classList","add","$992d81f953a795f6cd9dc13cc953d91f$var$createNetwork","artifact","content","before","after","afterContainer","selector","$992d81f953a795f6cd9dc13cc953d91f$var$selectorTemplate","buttonAfter","buttonBefore","toggleAfter","remove","disabled","fit","onclick","toggleBefore","preventDefault","Error","explain","getConnectedNodes","source","networkElement","feedbackElement","positions","getPositions","position","nodeCount","node","canvasToDOM","nwPos","fbPos","right","bottom","relative","scroll","window","pageYOffset","button"],"version":3,"file":"index.js.map"}